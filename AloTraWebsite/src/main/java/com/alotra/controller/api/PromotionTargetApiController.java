package com.alotra.controller.api;

import com.alotra.dto.CampaignTargetRequest;
import com.alotra.dto.PromotionTargetDTO;
import com.alotra.service.PromotionTargetService;
import lombok.RequiredArgsConstructor;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/api/admin/promotions/targets")
@RequiredArgsConstructor
public class PromotionTargetApiController {

    private final PromotionTargetService targetService;

    /**
     * ðŸŸ¢ Láº¥y danh sÃ¡ch target theo ID chiáº¿n dá»‹ch (dÃ¹ng DTO)
     * GET /api/admin/promotions/targets/by-campaign/{campaignId}
     */
    @GetMapping("/by-campaign/{campaignId}")
    public ResponseEntity<List<PromotionTargetDTO>> getByCampaign(@PathVariable Long campaignId) {
        return ResponseEntity.ok(targetService.getTargetDTOsByCampaign(campaignId));
    }

    /**
     * ðŸŸ¢ Láº¥y danh sÃ¡ch target theo sáº£n pháº©m (dÃ nh cho má»¥c Ä‘Ã­ch khÃ¡c)
     * GET /api/admin/promotions/targets/product/{productId}
     */
    @GetMapping("/product/{productId}")
    public ResponseEntity<List<PromotionTargetDTO>> getByProduct(@PathVariable Long productId) {
        return ResponseEntity.ok(targetService.getTargetDTOsByProduct(productId));
    }

    /**
     * ðŸŸ¡ GÃ¡n Ä‘á»‘i tÆ°á»£ng Ã¡p dá»¥ng cho chiáº¿n dá»‹ch
     * POST /api/admin/promotions/targets/{campaignId}
     */
    @PostMapping("/{campaignId}")
    public ResponseEntity<?> setTargets(
            @PathVariable Long campaignId,
            @RequestBody CampaignTargetRequest request
    ) {
        targetService.setTargetsForCampaign(campaignId, request);
        return ResponseEntity.ok().build();
    }

    /**
     * ðŸ”´ XÃ³a táº¥t cáº£ target cá»§a chiáº¿n dá»‹ch
     * DELETE /api/admin/promotions/targets/campaign/{campaignId}
     */
    @DeleteMapping("/campaign/{campaignId}")
    public ResponseEntity<?> deleteByCampaign(@PathVariable Long campaignId) {
        targetService.deleteByCampaignId(campaignId);
        return ResponseEntity.ok().build();
    }

    /**
     * ðŸ”´ XÃ³a 1 target cá»¥ thá»ƒ
     * DELETE /api/admin/promotions/targets/single/{id}
     */
    @DeleteMapping("/single/{id}")
    public ResponseEntity<?> deleteSingle(@PathVariable Long id) {
        targetService.delete(id);
        return ResponseEntity.ok().build();
    }
}
