package com.alotra.service;

import java.math.BigDecimal;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.stereotype.Service;

import com.alotra.entity.Order;
import com.alotra.entity.OrderItem;
import com.alotra.entity.User;
import com.alotra.repository.UserRepository;

import jakarta.mail.MessagingException;
import jakarta.mail.internet.MimeMessage;

@Service
public class EmailService {

    @Autowired
    private JavaMailSender mailSender;
    @Autowired
    private UserRepository userRepository; //

    // === 1Ô∏è‚É£ G·ª¨I MAIL X√ÅC NH·∫¨N ƒêƒÇNG K√ù ===
    public void sendRegistrationOtpEmail(String to, String otp) {
        String subject = "[AloTra] M√£ OTP x√°c th·ª±c t√†i kho·∫£n c·ªßa b·∫°n";
        String content = """
                <div style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
                    <h2 style="color: #007bff;">Xin ch√†o,</h2>
                    <p>C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n t·∫°i <strong>AloTra</strong>.</p>
                    <p>M√£ OTP c·ªßa b·∫°n l√†:</p>
                    <h1 style="background: #f2f2f2; padding: 12px 20px; display: inline-block; border-radius: 6px; color: #007bff;">
                        %s
                    </h1>
                    <p>M√£ OTP n√†y s·∫Ω h·∫øt h·∫°n sau <strong>5 ph√∫t</strong>.</p>
                    <p style="margin-top: 24px;">Tr√¢n tr·ªçng,<br><strong>ƒê·ªôi ng≈© AloTra</strong></p>
                    <hr style="margin-top:20px;">
                    <p style="font-size:13px; color:#888;">Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.</p>
                </div>
                """.formatted(otp);

        sendHtmlMail(to, subject, content, "AloTra Verification");
    }

    // === 2Ô∏è‚É£ G·ª¨I MAIL QU√äN M·∫¨T KH·∫®U ===
    public void sendPasswordResetOtpEmail(String to, String otp) {
        String subject = "[AloTra] X√°c nh·∫≠n ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u c·ªßa b·∫°n";
        String content = """
                <div style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
                    <h2 style="color: #d9534f;">Xin ch√†o,</h2>
                    <p>B·∫°n ƒë√£ y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n t·∫°i <strong>AloTra</strong>.</p>
                    <p>M√£ OTP c·ªßa b·∫°n l√†:</p>
                    <h1 style="background: #f8f9fa; padding: 12px 20px; display: inline-block; border-radius: 6px; color: #d9534f;">
                        %s
                    </h1>
                    <p>M√£ n√†y c√≥ hi·ªáu l·ª±c trong <strong>5 ph√∫t</strong>. N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y.</p>
                    <p style="margin-top: 24px;">Tr√¢n tr·ªçng,<br><strong>ƒê·ªôi ng≈© AloTra</strong></p>
                    <hr style="margin-top:20px;">
                    <p style="font-size:13px; color:#888;">Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.</p>
                </div>
                """.formatted(otp);

        sendHtmlMail(to, subject, content, "AloTra Support");
    }

    // === H√ÄM D√ôNG CHUNG G·ª¨I HTML MAIL ===
    private void sendHtmlMail(String to, String subject, String htmlContent, String senderName) {
        try {
            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, "UTF-8");
            helper.setTo(to);
            helper.setSubject(subject);
            helper.setText(htmlContent, true);

            // ‚úÖ B·ªçc ph·∫ßn n√†y trong try-catch ƒë·ªÉ tr√°nh UnsupportedEncodingException
            try {
                helper.setFrom("tinthanhn81@gmail.com", senderName);
            } catch (java.io.UnsupportedEncodingException e) {
                helper.setFrom("tinthanhn81@gmail.com"); // fallback n·∫øu l·ªói
            }

            mailSender.send(message);
        } catch (MessagingException e) {
            System.err.println("‚ùå L·ªói khi g·ª≠i email ƒë·∫øn " + to + ": " + e.getMessage());
        }
    }


    public void sendOrderConfirmationEmail(Long userId, Order order, List<OrderItem> items) {
        // üëá Trong th·ª±c t·∫ø, b·∫°n n√™n l·∫•y email ng∆∞·ªùi d√πng t·ª´ UserService ho·∫∑c Order
        // ·ªû ƒë√¢y minh h·ªça l·∫•y t·ª´ UserService (c√≥ th·ªÉ ch·ªânh l·∫°i t√πy h·ªá th·ªëng c·ªßa b·∫°n)
        String to = getUserEmailById(userId); // üìå c·∫ßn implement ho·∫∑c g·ªçi service c·ªßa b·∫°n

        String subject = "[AloTra] X√°c nh·∫≠n ƒë∆°n h√†ng #" + order.getCode();

        StringBuilder itemHtml = new StringBuilder();
        for (OrderItem item : items) {
            BigDecimal unit = item.getUnitPrice().add(item.getToppingTotal());
            BigDecimal line = unit.multiply(BigDecimal.valueOf(item.getQuantity()));
            itemHtml.append("""
                <tr>
                    <td>%s (%s)</td>
                    <td style="text-align:center;">%d</td>
                    <td style="text-align:right;">%s</td>
                    <td style="text-align:right;">%s</td>
                </tr>
            """.formatted(
                    item.getProductName(),
                    item.getSizeName(),
                    item.getQuantity(),
                    formatCurrency(unit),
                    formatCurrency(line)
            ));
        }

        String content = """
                <div style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
                    <h2 style="color:#28a745;">ƒê∆°n h√†ng c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng ‚úÖ</h2>
                    <p>C·∫£m ∆°n b·∫°n ƒë√£ ƒë·∫∑t h√†ng t·∫°i <strong>AloTra</strong>.</p>
                    <p><strong>M√£ ƒë∆°n h√†ng:</strong> %s</p>
                    <p><strong>ƒê·ªãa ch·ªâ giao h√†ng:</strong> %s</p>
                    <p><strong>Ph∆∞∆°ng th·ª©c thanh to√°n:</strong> %s</p>

                    <table style="width:100%%;border-collapse:collapse;margin-top:16px;">
                        <thead>
                            <tr style="background:#f8f9fa;">
                                <th style="text-align:left;padding:8px;">S·∫£n ph·∫©m</th>
                                <th style="text-align:center;padding:8px;">SL</th>
                                <th style="text-align:right;padding:8px;">ƒê∆°n gi√°</th>
                                <th style="text-align:right;padding:8px;">Th√†nh ti·ªÅn</th>
                            </tr>
                        </thead>
                        <tbody>
                            %s
                        </tbody>
                    </table>

                    <hr style="margin:20px 0;">
                    <p><strong>T·∫°m t√≠nh:</strong> %s</p>
                    <p><strong>Gi·∫£m gi√°:</strong> -%s</p>
                    <p><strong>Ph√≠ v·∫≠n chuy·ªÉn:</strong> %s</p>
                    <h3 style="color:#d9534f;">T·ªïng c·ªông: %s</h3>

                    <p style="margin-top: 24px;">Tr√¢n tr·ªçng,<br><strong>ƒê·ªôi ng≈© AloTra</strong></p>
                    <hr style="margin-top:20px;">
                    <p style="font-size:13px; color:#888;">Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.</p>
                </div>
                """.formatted(
                order.getCode(),
                order.getDeliveryAddress(),
                order.getPaymentMethod(),
                itemHtml,
                formatCurrency(order.getSubtotal()),
                formatCurrency(order.getDiscount()),
                formatCurrency(order.getShippingFee()),
                formatCurrency(order.getTotal())
        );

        sendHtmlMail(to, subject, content, "AloTra Order");
    }

    private String formatCurrency(BigDecimal amount) {
        if (amount == null) return "0 ‚Ç´";
        return String.format("%,.0f ‚Ç´", amount);
    }

    // === 4Ô∏è‚É£ G·ª¨I MAIL THANH TO√ÅN TH√ÄNH C√îNG ===
    public void sendPaymentSuccessEmail(Long userId, Order order) {
        String to = getUserEmailById(userId);
        String subject = "[AloTra] Thanh to√°n th√†nh c√¥ng cho ƒë∆°n h√†ng #" + order.getCode();
        String content = """
            <div style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
                <h2 style="color:#28a745;">üéâ Thanh to√°n th√†nh c√¥ng!</h2>
                <p>ƒê∆°n h√†ng <strong>#%s</strong> c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c thanh to√°n th√†nh c√¥ng qua VNPay.</p>
                <p>T·ªïng s·ªë ti·ªÅn: <strong style="color:#d9534f;">%s</strong></p>
                <p>Ch√∫ng t√¥i s·∫Ω x·ª≠ l√Ω ƒë∆°n h√†ng v√† giao cho b·∫°n s·ªõm nh·∫•t c√≥ th·ªÉ.</p>
                <p style="margin-top: 24px;">Tr√¢n tr·ªçng,<br><strong>ƒê·ªôi ng≈© AloTra</strong></p>
                <hr style="margin-top:20px;">
                <p style="font-size:13px; color:#888;">Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.</p>
            </div>
        """.formatted(order.getCode(), formatCurrency(order.getTotal()));
        sendHtmlMail(to, subject, content, "AloTra Payment");
    }

    // === 5Ô∏è‚É£ G·ª¨I MAIL THANH TO√ÅN TH·∫§T B·∫†I ===
    public void sendPaymentFailedEmail(Long userId, Order order) {
        String to = getUserEmailById(userId);
        String subject = "[AloTra] Thanh to√°n th·∫•t b·∫°i cho ƒë∆°n h√†ng #" + order.getCode();
        String content = """
            <div style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
                <h2 style="color:#d9534f;">‚ùå Thanh to√°n th·∫•t b·∫°i!</h2>
                <p>ƒê∆°n h√†ng <strong>#%s</strong> c·ªßa b·∫°n ch∆∞a ƒë∆∞·ª£c thanh to√°n th√†nh c√¥ng.</p>
                <p>Vui l√≤ng th·ª≠ l·∫°i ho·∫∑c ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n kh√°c.</p>
                <p>T·ªïng s·ªë ti·ªÅn c·∫ßn thanh to√°n: <strong style="color:#d9534f;">%s</strong></p>
                <p style="margin-top: 24px;">Tr√¢n tr·ªçng,<br><strong>ƒê·ªôi ng≈© AloTra</strong></p>
                <hr style="margin-top:20px;">
                <p style="font-size:13px; color:#888;">Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.</p>
            </div>
        """.formatted(order.getCode(), formatCurrency(order.getTotal()));
        sendHtmlMail(to, subject, content, "AloTra Payment");
    }

    // üìå T√πy h·ªá th·ªëng ‚Äî c√≥ th·ªÉ d√πng UserService ho·∫∑c l·∫•y tr·ª±c ti·∫øp t·ª´ Order
    private String getUserEmailById(Long userId) {
        Optional<User> userOpt = userRepository.findById(userId);
        return userOpt.map(User::getEmail).orElse(null);
    }}
